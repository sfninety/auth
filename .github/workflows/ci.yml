name: Deploy
# TODO: make this better

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


env: 
  DB_STRING: postgresql://service:${{ secrets.DB_KEY }}@free-tier7.aws-eu-west-1.cockroachlabs.cloud:26257/auth?sslmode=verify-full&options=--cluster%3Dsf90-cluster-2393
  MIGRATION_DB_STRING: cockroachdb://service:${{ secrets.DB_KEY }}@free-tier7.aws-eu-west-1.cockroachlabs.cloud:26257/auth?sslmode=verify-full&options=--cluster%3Dsf90-cluster-2393
  CLUSTER_NAME: sf90-dev1
  CLUSTER_RESOURCE_GROUP: SF90
  NAMESPACE: dev1


jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: login to registry
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: sf90registry
        password: ${{ secrets.REGISTRY_KEY }}
        login-server: sf90registry.azurecr.io

    - uses: actions/checkout@v3

    - name: set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: git authentication
      run: git config --global url."https://${{ secrets.AUTH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: build
      run: go build -v ./...

    - name: test
      run: go test -v ./...

    - name: prune images
      run: >
        docker image prune -a --force

      # Make the jwt_signing_key a template
    - name: build the Docker image
      run: >
        docker build --no-cache . --file ./docker/Dockerfile --tag auth:latest --build-arg auth_token=${{ secrets.AUTH_TOKEN }} --build-arg db_connection_string='${{ env.DB_STRING }}' --build-arg db_cert=${{ env.DB_CERT }} --build-arg jwt_signing_key=verysecurekey

    - name: tag the image
      run: docker tag auth:latest sf90registry.azurecr.io/services/auth

    - name: push the image to the repository
      run: docker push sf90registry.azurecr.io/services/auth

    - name: get certs 
      run: curl --create-dirs -o $HOME/.postgresql/root.crt -O https://cockroachlabs.cloud/clusters/${{ secrets.DB_CERT }}/cert

    - name: migrations
      run: docker run -v $PWD/migrations:/migrations --network host migrate/migrate -path=/migrations/ -database '${{ env.MIGRATION_DB_STRING }}' up
  
    
  deploy:
    runs-on: ubuntu-latest
    steps:

    - uses: azure/aks-set-context@v1
      with: 
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

  
    - run: kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -
    
    - uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: sf90registry
        password: ${{ secrets.REGISTRY_KEY }}
        login-server: sf90registry.azurecr.io

    - uses: azure/k8s-create-secret@v1
      with:
        secret-name: ${{ secrets.AUTH_TOKEN }}
        namespace: ${{ env.NAMESPACE }}
        arguments: --force true

    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          ${{ github.workspace }}/docker/k8s/depl.yml
          ${{ github.workspace }}/docker/k8s/svc.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}